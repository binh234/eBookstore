# Generated by Django 3.0.8 on 2020-11-18 08:26

import creditcards.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                'db_table': 'author',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('ISBN', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80)),
                ('year', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.CharField(blank=True, max_length=400, null=True)),
                ('traditional', models.BooleanField(default=True)),
                ('allow_number', models.IntegerField(blank=True, null=True)),
                ('electronic', models.BooleanField(default=False)),
                ('rent_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rent_duration', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'book',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=120, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('user', models.OneToOneField(blank=True, db_column='userId', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderTime', models.DateTimeField()),
                ('lastUpdate', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Unpaid', 'Unpaid'), ('Pending', 'Pending'), ('Delivered', 'Delivered'), ('Cancel', 'Cancel'), ('Error', 'Error')], default='Unpaid', max_length=20)),
                ('shippingAddress', models.CharField(blank=True, max_length=120, null=True)),
                ('complete', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(blank=True, db_column='customerId', null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer_app.Customer')),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'publisher',
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=20)),
                ('location', models.CharField(max_length=120)),
            ],
            options={
                'db_table': 'storage',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'topic',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('storage', models.ForeignKey(blank=True, db_column='storageId', null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer_app.Storage')),
                ('user', models.OneToOneField(blank=True, db_column='userId', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'staff',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewTime', models.DateTimeField(auto_now_add=True)),
                ('comment', models.CharField(max_length=400)),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('book', models.ForeignKey(db_column='bookISBN', on_delete=django.db.models.deletion.CASCADE, to='customer_app.Book')),
                ('customer', models.ForeignKey(db_column='customerId', on_delete=django.db.models.deletion.CASCADE, to='customer_app.Customer')),
            ],
            options={
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymentTime', models.DateTimeField(auto_now_add=True)),
                ('method', models.CharField(choices=[('credit', 'credit'), ('transfer', 'transfer')], default='transfer', max_length=12)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('customer', models.ForeignKey(blank=True, db_column='customerId', null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer_app.Customer')),
                ('order', models.ForeignKey(blank=True, db_column='orderId', null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer_app.Order')),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('option', models.CharField(choices=[('buy', 'buy'), ('eBuy', 'eBuy'), ('eRent', 'eRent')], default='buy', max_length=10)),
                ('book', models.ForeignKey(db_column='bookISBN', on_delete=django.db.models.deletion.CASCADE, to='customer_app.Book')),
                ('order', models.ForeignKey(db_column='orderId', on_delete=django.db.models.deletion.CASCADE, to='customer_app.Order')),
            ],
            options={
                'db_table': 'order_item',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='staff',
            field=models.ForeignKey(blank=True, db_column='staffId', null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer_app.Staff'),
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=20)),
                ('book', models.ForeignKey(db_column='bookISBN', on_delete=django.db.models.deletion.CASCADE, to='customer_app.Book')),
            ],
            options={
                'db_table': 'keyword',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('book', models.ForeignKey(db_column='bookISBN', on_delete=django.db.models.deletion.CASCADE, to='customer_app.Book')),
                ('storage', models.ForeignKey(db_column='storageId', on_delete=django.db.models.deletion.CASCADE, to='customer_app.Storage')),
            ],
            options={
                'db_table': 'store',
            },
        ),
        migrations.CreateModel(
            name='Import',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('import_time', models.DateTimeField(auto_now_add=True)),
                ('book', models.ForeignKey(db_column='bookISBN', on_delete=django.db.models.deletion.CASCADE, to='customer_app.Book')),
                ('storage', models.ForeignKey(db_column='storageId', on_delete=django.db.models.deletion.CASCADE, to='customer_app.Storage')),
            ],
            options={
                'db_table': 'import_history',
            },
        ),
        migrations.CreateModel(
            name='Export',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('export_time', models.DateTimeField(auto_now_add=True)),
                ('book', models.ForeignKey(db_column='bookISBN', on_delete=django.db.models.deletion.CASCADE, to='customer_app.Book')),
                ('storage', models.ForeignKey(db_column='storageId', on_delete=django.db.models.deletion.CASCADE, to='customer_app.Storage')),
            ],
            options={
                'db_table': 'export_history',
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ownerName', models.CharField(max_length=50)),
                ('code', creditcards.models.CardNumberField(max_length=20)),
                ('bank', models.CharField(max_length=50)),
                ('branch', models.CharField(max_length=50)),
                ('expireDate', models.DateField()),
                ('customer', models.ForeignKey(blank=True, db_column='customerId', null=True, on_delete=django.db.models.deletion.CASCADE, to='customer_app.Customer')),
            ],
            options={
                'db_table': 'card',
            },
        ),
        migrations.CreateModel(
            name='BookAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(db_column='authorId', on_delete=django.db.models.deletion.CASCADE, to='customer_app.Author')),
                ('book', models.ForeignKey(db_column='bookISBN', on_delete=django.db.models.deletion.CASCADE, to='customer_app.Book')),
            ],
            options={
                'db_table': 'book_author',
                'unique_together': {('book', 'author')},
            },
        ),
        migrations.CreateModel(
            name='Book_Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('book', models.ForeignKey(db_column='bookISBN', on_delete=django.db.models.deletion.CASCADE, to='customer_app.Book')),
            ],
            options={
                'db_table': 'book_image',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='authors',
            field=models.ManyToManyField(through='customer_app.BookAuthor', to='customer_app.Author'),
        ),
        migrations.AddField(
            model_name='book',
            name='publisher',
            field=models.ForeignKey(blank=True, db_column='publisherId', null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer_app.Publisher'),
        ),
        migrations.AddField(
            model_name='book',
            name='topics',
            field=models.ManyToManyField(db_table='book_topic', to='customer_app.Topic'),
        ),
    ]
